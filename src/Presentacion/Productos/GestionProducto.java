/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Presentacion.Productos;

import Entidades.Producto;
import Entidades.Proveedor;
import Logica.ProductoManager;
import Presentacion.Modelos.ModeloTablaProducto;
import Presentacion.Modelos.ModeloComboboxProveedores;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.datatransfer.DataFlavor;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.TransferHandler;
import Logica.ProveeedorManager;
import javax.swing.plaf.basic.BasicInternalFrameUI;

import javax.swing.table.DefaultTableCellRenderer;

import javax.swing.SwingConstants;
import javax.swing.JTable;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellRenderer;
import java.awt.Component;
/**
 *
 * @author Amir Altamirano
 */
public class GestionProducto extends javax.swing.JInternalFrame {

    private static GestionProducto producto;

    private ProductoManager pm;
    private ProveeedorManager proveeedorManager;
    private ModeloTablaProducto modeloTablaProducto = new ModeloTablaProducto();
    private ModeloComboboxProveedores comboboxProveedor = new ModeloComboboxProveedores();
    private Producto productoSeleccionado = null;

    /**
     * Creates new form GestionProducto
     */
    private GestionProducto() {

        /*BasicInternalFrameUI uli = (BasicInternalFrameUI) this.getUI();
        uli.setNorthPane(null);*/
        //this.setBorder(null);

        this.comboboxProveedor = new ModeloComboboxProveedores();
        initComponents();
        pm = new ProductoManager();
        proveeedorManager = new ProveeedorManager();

        
        cargarTabla();


        this.LayeredVerProducto.setVisible(false);
        this.LayeredVerProducto.setSize(0, 450);
        Dimension sizeDimension = CalcularDimenciones();
        this.setSize(sizeDimension.width, sizeDimension.height);
        System.out.println("se esta maximisado" + this.isMaximum());

    }

    public static GestionProducto getProducto() {

        if (producto == null || producto.isClosed()) {
            producto = new GestionProducto();
        }
        return producto;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        LayeredListaProductos = new javax.swing.JLayeredPane();
        jLabel2 = new javax.swing.JLabel();
        BTModificar = new javax.swing.JButton();
        BTEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TBListaProductos = new javax.swing.JTable();
        BTNuevo = new javax.swing.JButton();
        LayeredVerProducto = new javax.swing.JLayeredPane();
        LBNombre_producto = new javax.swing.JLabel();
        LBVerImagen = new javax.swing.JLabel();
        LBPrecioVenta = new javax.swing.JLabel();
        LBPrecioCompra = new javax.swing.JLabel();
        BTCerrarVer = new javax.swing.JButton();
        LBProveedor = new javax.swing.JLabel();
        LBStock = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setMaximizable(true);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Lista de productos");

        BTModificar.setBackground(new java.awt.Color(153, 153, 255));
        BTModificar.setText("Modificar");
        BTModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTModificarActionPerformed(evt);
            }
        });

        BTEliminar.setBackground(new java.awt.Color(153, 153, 255));
        BTEliminar.setText("Eliminar");
        BTEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTEliminarActionPerformed(evt);
            }
        });

        TBListaProductos.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        TBListaProductos.setModel(this.modeloTablaProducto);
        TBListaProductos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TBListaProductos.setGridColor(new java.awt.Color(204, 204, 204));
        TBListaProductos.setInheritsPopupMenu(true);
        TBListaProductos.setShowHorizontalLines(true);
        TBListaProductos.setShowVerticalLines(true);
        TBListaProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TBListaProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TBListaProductos);

        BTNuevo.setBackground(new java.awt.Color(153, 153, 255));
        BTNuevo.setText("Nuevo");
        BTNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNuevoActionPerformed(evt);
            }
        });

        LayeredListaProductos.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        LayeredListaProductos.setLayer(BTModificar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        LayeredListaProductos.setLayer(BTEliminar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        LayeredListaProductos.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        LayeredListaProductos.setLayer(BTNuevo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout LayeredListaProductosLayout = new javax.swing.GroupLayout(LayeredListaProductos);
        LayeredListaProductos.setLayout(LayeredListaProductosLayout);
        LayeredListaProductosLayout.setHorizontalGroup(
            LayeredListaProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LayeredListaProductosLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(BTNuevo)
                .addGap(18, 18, 18)
                .addComponent(BTModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BTEliminar))
            .addGroup(LayeredListaProductosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(LayeredListaProductosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE)
                .addContainerGap())
        );
        LayeredListaProductosLayout.setVerticalGroup(
            LayeredListaProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LayeredListaProductosLayout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(LayeredListaProductosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BTEliminar)
                    .addComponent(BTModificar)
                    .addComponent(BTNuevo))
                .addContainerGap())
        );

        LayeredVerProducto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        LayeredVerProducto.setAutoscrolls(true);
        LayeredVerProducto.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        LayeredVerProducto.setOpaque(true);

        LBNombre_producto.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        LBNombre_producto.setText("Nombre de producto");

        LBVerImagen.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        LBVerImagen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LBVerImagen.setText("Imagen de profucto");
        LBVerImagen.setBorder(new javax.swing.border.MatteBorder(null));
        LBVerImagen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        LBVerImagen.setVerifyInputWhenFocusTarget(false);

        LBPrecioVenta.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        LBPrecioVenta.setText("Precio de venta: S/");

        LBPrecioCompra.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        LBPrecioCompra.setText("Precio de compra: S/");

        BTCerrarVer.setBackground(new java.awt.Color(153, 153, 255));
        BTCerrarVer.setText("X");
        BTCerrarVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTCerrarVerActionPerformed(evt);
            }
        });

        LBProveedor.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        LBProveedor.setText("Proveedor:");

        LBStock.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        LBStock.setText("Stock:");

        LayeredVerProducto.setLayer(LBNombre_producto, javax.swing.JLayeredPane.DEFAULT_LAYER);
        LayeredVerProducto.setLayer(LBVerImagen, javax.swing.JLayeredPane.DEFAULT_LAYER);
        LayeredVerProducto.setLayer(LBPrecioVenta, javax.swing.JLayeredPane.DEFAULT_LAYER);
        LayeredVerProducto.setLayer(LBPrecioCompra, javax.swing.JLayeredPane.DEFAULT_LAYER);
        LayeredVerProducto.setLayer(BTCerrarVer, javax.swing.JLayeredPane.DEFAULT_LAYER);
        LayeredVerProducto.setLayer(LBProveedor, javax.swing.JLayeredPane.DEFAULT_LAYER);
        LayeredVerProducto.setLayer(LBStock, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout LayeredVerProductoLayout = new javax.swing.GroupLayout(LayeredVerProducto);
        LayeredVerProducto.setLayout(LayeredVerProductoLayout);
        LayeredVerProductoLayout.setHorizontalGroup(
            LayeredVerProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LayeredVerProductoLayout.createSequentialGroup()
                .addGroup(LayeredVerProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LayeredVerProductoLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(LayeredVerProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LBPrecioCompra)
                            .addComponent(LBPrecioVenta)
                            .addComponent(LBNombre_producto)
                            .addComponent(LBProveedor)
                            .addComponent(LBStock)))
                    .addGroup(LayeredVerProductoLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(LBVerImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LayeredVerProductoLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(BTCerrarVer))
        );
        LayeredVerProductoLayout.setVerticalGroup(
            LayeredVerProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LayeredVerProductoLayout.createSequentialGroup()
                .addComponent(BTCerrarVer)
                .addGap(15, 15, 15)
                .addComponent(LBNombre_producto)
                .addGap(40, 40, 40)
                .addComponent(LBVerImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(LBPrecioVenta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LBPrecioCompra)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LBStock)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LBProveedor)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(LayeredListaProductos)
                .addGap(50, 50, 50)
                .addComponent(LayeredVerProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LayeredVerProducto)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LayeredListaProductos)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BTCerrarVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTCerrarVerActionPerformed
        this.LayeredVerProducto.setVisible(false);
        //[328, 450]
        this.LayeredVerProducto.setSize(0, 450);
        if (!this.isMaximum()) {
            Dimension sizeDimension = CalcularDimenciones();
            this.setSize(sizeDimension.width, sizeDimension.height);
        }
    }//GEN-LAST:event_BTCerrarVerActionPerformed

    private void BTNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNuevoActionPerformed
        /*
        funciones de un nuevo producto
        */
    }//GEN-LAST:event_BTNuevoActionPerformed

    private void TBListaProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TBListaProductosMouseClicked
        if (evt.getClickCount() == 2 && TBListaProductos.getSelectedRow() != -1) {
            int fila = TBListaProductos.getSelectedRow();
            if (fila == -1) {
                JOptionPane.showMessageDialog(this, "Seleccione un producto de la tabla.");
                return;
            }
            Producto producto = modeloTablaProducto.getProductoEn(fila);
            LBNombre_producto.setText(producto.getNombre());
            LBPrecioCompra.setText("Precio de compra: S/ " + producto.getPrecioCompra());
            LBPrecioVenta.setText("Precio de venta: S/ " + producto.getPrecioVenta());
            LBProveedor.setText("Proveedor:" + producto.getProveedor().getNombre());
            LBStock.setText("Stock: "+ producto.getStock());

            // Cargar imagen si tiene
            if (producto.getUrl() != null && !producto.getUrl().isEmpty()) {
                File archivo = new File(producto.getUrl());
                if (archivo.exists()) {
                    try {
                        BufferedImage imagen = ImageIO.read(archivo);
                        Image escalada = imagen.getScaledInstance(LBVerImagen.getWidth(), LBVerImagen.getHeight(), Image.SCALE_SMOOTH);
                        LBVerImagen.setIcon(new ImageIcon(escalada));
                        LBVerImagen.setText("");
                    } catch (Exception e) {
                        LBVerImagen.setText("Error al cargar imagen");
                        LBVerImagen.setIcon(null);
                    }
                } else {
                    LBVerImagen.setText("Imagen no encontrada");
                    LBVerImagen.setIcon(null);
                }
            } else {
                LBVerImagen.setText("Sin imagen");
                LBVerImagen.setIcon(null);
            }
            LayeredVerProducto.setVisible(true);
            LayeredVerProducto.setSize(328, 450);
            if (!this.isMaximum()) {
                Dimension sizeDimension = CalcularDimenciones();
                this.setSize(sizeDimension.width, sizeDimension.height);
            }
        }
    }//GEN-LAST:event_TBListaProductosMouseClicked

    private void BTEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTEliminarActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = TBListaProductos.getSelectedRow();
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un producto de la tabla para eliminar.", "Selección Requerida", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Producto productoAEliminar = modeloTablaProducto.getProducto(filaSeleccionada);

        int confirmacion = JOptionPane.showConfirmDialog(
            this,
            "¿Está seguro de que desea eliminar el producto '" + productoAEliminar.getNombre() + "'?",
            "Confirmar Eliminación",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE
        );

        if (confirmacion == JOptionPane.YES_OPTION) {
            if (pm.eliminarProducto(productoAEliminar.getId())) {
                JOptionPane.showMessageDialog(this, "Producto eliminado exitosamente.", "Eliminación Exitosa", JOptionPane.INFORMATION_MESSAGE);
                cargarTabla();
                limpiarFormulario();
            } else {
                JOptionPane.showMessageDialog(this, "No se pudo eliminar el producto.", "Error de Eliminación", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_BTEliminarActionPerformed

    private void BTModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTModificarActionPerformed
       /*
        accion de modificar
        */
    }//GEN-LAST:event_BTModificarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTCerrarVer;
    private javax.swing.JButton BTEliminar;
    private javax.swing.JButton BTModificar;
    private javax.swing.JButton BTNuevo;
    private javax.swing.JLabel LBNombre_producto;
    private javax.swing.JLabel LBPrecioCompra;
    private javax.swing.JLabel LBPrecioVenta;
    private javax.swing.JLabel LBProveedor;
    private javax.swing.JLabel LBStock;
    private javax.swing.JLabel LBVerImagen;
    private javax.swing.JLayeredPane LayeredListaProductos;
    private javax.swing.JLayeredPane LayeredVerProducto;
    private javax.swing.JTable TBListaProductos;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    

    public Dimension CalcularDimenciones() {
        Dimension size = new Dimension(900, 600);
        this.setPreferredSize(size);
        this.setSize(size);
        return size;
    }

    public void cargarTabla() {
        try {
            modeloTablaProducto.setListadoProducto(pm.cargarProductosActivos());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
            this.setSize(getPreferredSize());
        }
        centrarCeldas(TBListaProductos);
        ajustarAnchoColumnas(TBListaProductos);
    }

    

    private void limpiarFormulario() {
        


        // MUY IMPORTANTE: Resetear el estado a "nuevo registro"
        this.productoSeleccionado = null;
        TBListaProductos.clearSelection();
    }

    

    
    public void centrarCeldas(JTable tabla) {
        DefaultTableCellRenderer centrar = new DefaultTableCellRenderer();
        centrar.setHorizontalAlignment(SwingConstants.CENTER);

        for (int i = 0; i < tabla.getColumnCount(); i++) {
            tabla.getColumnModel().getColumn(i).setCellRenderer(centrar);
        }
    }
    
    public void ajustarAnchoColumnas(JTable tabla) {
        for (int col = 0; col < tabla.getColumnCount(); col++) {
            TableColumn columna = tabla.getColumnModel().getColumn(col);
            int anchoMax = 0;

            // Comprobar ancho del header
            TableCellRenderer headerRenderer = columna.getHeaderRenderer();
            if (headerRenderer == null) {
                headerRenderer = tabla.getTableHeader().getDefaultRenderer();
            }
            Component headerComp = headerRenderer.getTableCellRendererComponent(
                tabla, columna.getHeaderValue(), false, false, 0, col);
            anchoMax = headerComp.getPreferredSize().width;

            // Comprobar ancho de las celdas
            for (int row = 0; row < tabla.getRowCount(); row++) {
                TableCellRenderer cellRenderer = tabla.getCellRenderer(row, col);
                Component comp = tabla.prepareRenderer(cellRenderer, row, col);
                int anchoCelda = comp.getPreferredSize().width;
                anchoMax = Math.max(anchoMax, anchoCelda);
            }

            columna.setPreferredWidth(anchoMax + 10); // margen adicional
        }
    }
    
}

