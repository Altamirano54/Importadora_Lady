/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Presentacion;

import Entidades.Proveedor;
import Logica.ProveeedorManager;
import Presentacion.Modelos.ModeloComboboxTipoDocumento;
import Presentacion.Modelos.ModeloTablaProveedor;
import java.awt.BorderLayout;
import java.awt.Component;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author Amir Altamirano
 */
public class GestionProveedor extends javax.swing.JInternalFrame {

    private static GestionProveedor proveedor;

    ProveeedorManager pm = new ProveeedorManager();
    ModeloTablaProveedor mtp = new ModeloTablaProveedor();
    private Proveedor proveedorSeleccionado = null;

    /**
     * Creates new form GestionProveedor
     */
    private GestionProveedor() {
        initComponents();
        CargarTabla();
        TBListadaProveedores.getSelectionModel().addListSelectionListener(e -> {
            // Se ejecuta solo cuando la selecci√≥n se ha estabilizado
            if (!e.getValueIsAdjusting()) {
                cargarDatosProveedorSeleccionado();
            }
        });
        /*BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);*/
        //this.setBorder(null);

    }

    public static GestionProveedor getProveedor() {
        if (proveedor == null || proveedor.isClosed()) {
            proveedor = new GestionProveedor();

        }
        return proveedor;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        TFNombre = new javax.swing.JTextField();
        TFDireccion = new javax.swing.JTextField();
        TFCorreo = new javax.swing.JTextField();
        TFContacto = new javax.swing.JTextField();
        BTRegistrar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        TFRuc = new javax.swing.JTextField();
        BTModificar = new javax.swing.JButton();
        BTEliminar = new javax.swing.JButton();
        panelTabla = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TBListadaProveedores = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(0, 0, 0)));
        setClosable(true);
        setForeground(java.awt.Color.white);
        setMaximizable(true);
        setResizable(true);
        setTitle("Gestion de Proveedores");
        setToolTipText("");
        setFocusable(false);
        setOpaque(true);
        setVisible(true);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Proveedor.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Roboto SemiCondensed ExtraBold", 1, 14)); // NOI18N
        jLabel2.setText("Nombre:");

        jLabel3.setFont(new java.awt.Font("Roboto SemiCondensed ExtraBold", 1, 14)); // NOI18N
        jLabel3.setText("Direccion:");

        jLabel4.setFont(new java.awt.Font("Roboto SemiCondensed ExtraBold", 1, 14)); // NOI18N
        jLabel4.setText("Correo:");

        jLabel5.setFont(new java.awt.Font("Roboto SemiCondensed ExtraBold", 1, 14)); // NOI18N
        jLabel5.setText("Contacto:");

        TFNombre.setBackground(new java.awt.Color(204, 204, 255));
        TFNombre.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        TFNombre.setForeground(new java.awt.Color(255, 255, 255));
        TFNombre.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        TFDireccion.setBackground(new java.awt.Color(204, 204, 255));
        TFDireccion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        TFDireccion.setForeground(new java.awt.Color(255, 255, 255));
        TFDireccion.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        TFCorreo.setBackground(new java.awt.Color(204, 204, 255));
        TFCorreo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        TFCorreo.setForeground(new java.awt.Color(255, 255, 255));
        TFCorreo.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        TFCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFCorreoActionPerformed(evt);
            }
        });

        TFContacto.setBackground(new java.awt.Color(204, 204, 255));
        TFContacto.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        TFContacto.setForeground(new java.awt.Color(255, 255, 255));
        TFContacto.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        TFContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFContactoActionPerformed(evt);
            }
        });

        BTRegistrar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        BTRegistrar.setText("Registrar");
        BTRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTRegistrarActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Proveedores      ");
        jLabel6.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));

        jLabel7.setFont(new java.awt.Font("Roboto SemiCondensed ExtraBold", 1, 14)); // NOI18N
        jLabel7.setText("Ruc:");

        TFRuc.setBackground(new java.awt.Color(204, 204, 255));
        TFRuc.setForeground(new java.awt.Color(255, 255, 255));
        TFRuc.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        BTModificar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        BTModificar.setText("Modificar");
        BTModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTModificarActionPerformed(evt);
            }
        });

        BTEliminar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        BTEliminar.setText("Eliminar");
        BTEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BTRegistrar, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                            .addComponent(TFDireccion, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                            .addComponent(TFNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                            .addComponent(TFCorreo, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                            .addComponent(TFContacto, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                            .addComponent(TFRuc, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                            .addComponent(BTModificar, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                            .addComponent(BTEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE))))
                .addContainerGap(9, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(TFRuc, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TFNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TFDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(TFCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(TFContacto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(BTRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BTModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BTEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        panelTabla.setBackground(new java.awt.Color(204, 204, 255));
        panelTabla.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 0, new java.awt.Color(0, 0, 0)));

        jScrollPane1.setBackground(new java.awt.Color(190, 147, 234));

        TBListadaProveedores.setModel(this.mtp);
        TBListadaProveedores.setGridColor(new java.awt.Color(178, 124, 234));
        TBListadaProveedores.setSelectionBackground(new java.awt.Color(178, 124, 234));
        jScrollPane1.setViewportView(TBListadaProveedores);

        javax.swing.GroupLayout panelTablaLayout = new javax.swing.GroupLayout(panelTabla);
        panelTabla.setLayout(panelTablaLayout);
        panelTablaLayout.setHorizontalGroup(
            panelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
        );
        panelTablaLayout.setVerticalGroup(
            panelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(panelTabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelTabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TFContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFContactoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFContactoActionPerformed

    private void BTRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTRegistrarActionPerformed
        // Obtener valores y quitar espacios en blanco
        String nombre = TFNombre.getText().trim();
        String ruc = TFRuc.getText().trim();
        String direccion = TFDireccion.getText().trim();
        String correo = TFCorreo.getText().trim();
        String contacto = TFContacto.getText().trim();

        // Validaci√≥n de campos vac√≠os
        if (nombre.isEmpty() || ruc.isEmpty() || direccion.isEmpty() || correo.isEmpty() || contacto.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe rellenar todos los campos.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // --- L√≥gica para diferenciar entre REGISTRAR y ACTUALIZAR ---
        if (proveedorSeleccionado == null) {
            // --- MODO REGISTRO ---
            Proveedor nuevoProveedor = new Proveedor();
            nuevoProveedor.setNombre(nombre);
            nuevoProveedor.setRuc(ruc);
            nuevoProveedor.setDireccion(direccion);
            nuevoProveedor.setCorreo(correo);
            nuevoProveedor.setContacto(contacto);

            try {
                if (pm.crear(nuevoProveedor) > 0) {
                    JOptionPane.showMessageDialog(this, "Proveedor registrado correctamente.", "Registro Exitoso", JOptionPane.INFORMATION_MESSAGE);
                    CargarTabla();
                    limpiarFormulario();
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "No se pudo crear el nuevo proveedor: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            // --- MODO ACTUALIZACI√ìN ---
            proveedorSeleccionado.setNombre(nombre);
            proveedorSeleccionado.setRuc(ruc);
            proveedorSeleccionado.setDireccion(direccion);
            proveedorSeleccionado.setCorreo(correo);
            proveedorSeleccionado.setContacto(contacto);

            try {
                pm.actualizar(proveedorSeleccionado);
                JOptionPane.showMessageDialog(this, "Proveedor actualizado correctamente.", "Actualizaci√≥n Exitosa", JOptionPane.INFORMATION_MESSAGE);
                CargarTabla();
                limpiarFormulario();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "No se pudo actualizar el proveedor: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_BTRegistrarActionPerformed

    private void TFCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFCorreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TFCorreoActionPerformed

    private void BTModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTModificarActionPerformed
        // TODO add your handling code here:
        limpiarFormulario();
    }//GEN-LAST:event_BTModificarActionPerformed

    private void BTEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTEliminarActionPerformed
        // TODO add your handling code here:
        if (proveedorSeleccionado == null) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un proveedor de la tabla para eliminar.", "Selecci√≥n Requerida", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int confirmacion = JOptionPane.showConfirmDialog(
                this,
                "¬øEst√° seguro de que desea eliminar al proveedor '" + proveedorSeleccionado.getNombre() + "'?",
                "Confirmar Eliminaci√≥n",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE
        );

        if (confirmacion == JOptionPane.YES_OPTION) {
            try {
                pm.eliminar(proveedorSeleccionado);
                JOptionPane.showMessageDialog(this, "Proveedor eliminado exitosamente.", "Eliminaci√≥n Exitosa", JOptionPane.INFORMATION_MESSAGE);
                CargarTabla();
                limpiarFormulario();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "No se pudo eliminar el proveedor: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_BTEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTEliminar;
    private javax.swing.JButton BTModificar;
    private javax.swing.JButton BTRegistrar;
    private javax.swing.JTable TBListadaProveedores;
    private javax.swing.JTextField TFContacto;
    private javax.swing.JTextField TFCorreo;
    private javax.swing.JTextField TFDireccion;
    private javax.swing.JTextField TFNombre;
    private javax.swing.JTextField TFRuc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelTabla;
    // End of variables declaration//GEN-END:variables

    public void CargarTabla() {
        try {
            mtp.setListadoProveedor(pm.lista());
            ajustarAnchoColumnas(TBListadaProveedores);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Nose pudo cargar la tabla");
        }
    }

    public void limpiarCampos() {
        TFNombre.setText("");
        TFRuc.setText("");
        TFDireccion.setText("");
        TFCorreo.setText("");
        TFContacto.setText("");
    }

    private void limpiarFormulario() {
        TFNombre.setText("");
        TFRuc.setText("");
        TFDireccion.setText("");
        TFCorreo.setText("");
        TFContacto.setText("");

        // --- Resetea el estado del formulario ---
        TBListadaProveedores.clearSelection(); // Deselecciona la fila de la tabla
        this.proveedorSeleccionado = null; // Olvida al proveedor seleccionado
        BTRegistrar.setText("Registrar"); // Cambia el texto del bot√≥n a su estado original
        TFRuc.requestFocus(); // Pone el foco en el primer campo
    }

    private void cargarDatosProveedorSeleccionado() {
        int filaSeleccionada = TBListadaProveedores.getSelectedRow();
        if (filaSeleccionada != -1) { // Si hay una fila seleccionada
            // Obtiene el objeto Proveedor del modelo de la tabla
            this.proveedorSeleccionado = mtp.getProveedor(filaSeleccionada);

            // Llena los campos de texto con los datos del proveedor
            TFRuc.setText(proveedorSeleccionado.getRuc());
            TFNombre.setText(proveedorSeleccionado.getNombre());
            TFDireccion.setText(proveedorSeleccionado.getDireccion());
            TFCorreo.setText(proveedorSeleccionado.getCorreo());
            TFContacto.setText(proveedorSeleccionado.getContacto());

            // Cambia el texto del bot√≥n para indicar que se va a guardar una modificaci√≥n
            BTRegistrar.setText("Guardar Cambios");
        }
    }
    
    public void ajustarAnchoColumnas(JTable tabla) {
        for (int col = 0; col < tabla.getColumnCount(); col++) {
            TableColumn columna = tabla.getColumnModel().getColumn(col);
            int anchoMax = 0;

            // Comprobar ancho del header
            TableCellRenderer headerRenderer = columna.getHeaderRenderer();
            if (headerRenderer == null) {
                headerRenderer = tabla.getTableHeader().getDefaultRenderer();
            }
            Component headerComp = headerRenderer.getTableCellRendererComponent(
                tabla, columna.getHeaderValue(), false, false, 0, col);
            anchoMax = headerComp.getPreferredSize().width;

            // Comprobar ancho de las celdas
            for (int row = 0; row < tabla.getRowCount(); row++) {
                TableCellRenderer cellRenderer = tabla.getCellRenderer(row, col);
                Component comp = tabla.prepareRenderer(cellRenderer, row, col);
                int anchoCelda = comp.getPreferredSize().width;
                anchoMax = Math.max(anchoMax, anchoCelda);
            }

            columna.setPreferredWidth(anchoMax + 10); // margen adicional
        }
    }

}
